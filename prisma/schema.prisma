// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username String @unique
  clerkId   String? @unique
  name      String?
  bio       String?
  image     String?
  location  String?
  website   String?
  createdAt DateTime @default(now())  // 2021-08-13T15:00:00.000Z
  updatedAt DateTime @updatedAt        // 2021-08-13T15:00:00.000Z

  //Relations
  posts     Post[]
  comments  Comment[]
  likes     Like[]


  followers Follows[] @relation("Following") // Users following the user
  following Follows[] @relation("Follower")  // Users the user is following

  notifications Notification[] @relation("userNotifications") // Notifications for the user
  notificationsCreated Notification[] @relation("notificationsCreator")     // Notifications created by the user

}
model Post{
  id        String    @id @default(cuid())
  authorId String
  content String?
  image String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relations
  author User @relation(fields: [authorId],references: [id], onDelete: Cascade) // cascade delete means delete all posts if author is deleted
  comments Comment[]
  likes Like[]
  notifications Notification[]
}
